<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017/07 on SwiSwiSwift</title>
    <link>https://en.swiswiswift.com/archives/2017/07/</link>
    <description>Recent content in 2017/07 on SwiSwiSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://en.swiswiswift.com/archives/2017/07/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I also want to check the response header when sending JSON in post with curl</title>
      <link>https://en.swiswiswift.com/2017-07-26/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-26/</guid>
      <description>I used it when I wanted to check the response header when sending JSON in post with curl. If you add --include at the end, the response header is also shown.</description>
    </item>
    
    <item>
      <title>Sending JSON in post with curl</title>
      <link>https://en.swiswiswift.com/2017-07-25/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-25/</guid>
      <description>How to post json from Mac terminal with curl command.
I often use it when I&#39;m developing locally and want to check the APIs.
curl http://localhost:3000/api/url -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -d &#39;{&amp;quot;email&amp;quot;:&amp;quot;kabigon@swiswiswift.</description>
    </item>
    
    <item>
      <title>Obtaining JSON from the API using Alamofire</title>
      <link>https://en.swiswiswift.com/2017-07-09/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-09/</guid>
      <description>New article (Swift4) is here. Using Alamofire to get JSON from the API (Swift4.2) This is a sample of retrieving information from the weather API</description>
    </item>
    
    <item>
      <title>Calling a method from another View in a delegate</title>
      <link>https://en.swiswiswift.com/2017-07-08/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-08/</guid>
      <description>This is a sample of a delegate that executes functions, etc. from one View to another ViewController.
In this case, I changed the background color of the original view from a modal view using a delegate.</description>
    </item>
    
  </channel>
</rss>