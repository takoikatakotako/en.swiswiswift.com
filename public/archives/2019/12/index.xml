<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019/12 on SwiSwiSwift</title>
    <link>https://en.swiswiswift.com/archives/2019/12/</link>
    <description>Recent content in 2019/12 on SwiSwiSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://en.swiswiswift.com/archives/2019/12/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sample apps using MVP architecture</title>
      <link>https://en.swiswiswift.com/2019-12-30/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-30/</guid>
      <description>This is a sample application using MVP architecture. I&#39;ve also written unit tests and UI tests.
It&#39;s an app that adds up numbers like the following</description>
    </item>
    
    <item>
      <title>Remove Storyboards from projects running iOS13 and above</title>
      <link>https://en.swiswiswift.com/2019-12-29/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-29/</guid>
      <description>Create a file with Swift &amp;amp; Storyboard. Removes Main.storyboard. Delete the term Main storyboard file base name. Application Scene Manifest -&amp;gt; Application Session Role -&amp;gt;</description>
    </item>
    
    <item>
      <title>Gist doesn&#39;t show up in Hugo</title>
      <link>https://en.swiswiswift.com/2019-12-28/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-28/</guid>
      <description>When I updated the version of Hugo, I no longer see the following Gist page.
&amp;lt;script src=&amp;quot;https://gist.github.com/takoikatakotako/5aba51305d74c009a2c878897837e006.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; It worked by rewriting it as follows.
Reference: Shortcodes</description>
    </item>
    
    <item>
      <title>Getting into an Alpine based container with Docker</title>
      <link>https://en.swiswiswift.com/2019-12-21/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-21/</guid>
      <description>There are times when you want to go inside a Docker container and use a shell. Normally, you would use the following command to enter</description>
    </item>
    
    <item>
      <title>Displaying an alert in SwiftUI</title>
      <link>https://en.swiswiswift.com/2019-12-20/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-20/</guid>
      <description>How to display an alert in SwiftUI. It is written quite differently from UIAlertController. The @State of the Property Wrapper is still unfamiliar.
 </description>
    </item>
    
    <item>
      <title>Constructing a Struct using the FunctionBuilder added in Swift5.1</title>
      <link>https://en.swiswiswift.com/2019-12-19/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-19/</guid>
      <description>This is how to create a Struct using the FunctionBuilder added in Swift 5.1. It&#39;s also active in SwiftUI.
 </description>
    </item>
    
    <item>
      <title>How to get an alert when you tap a cell in a list in SwiftUI</title>
      <link>https://en.swiswiswift.com/2019-12-18/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-18/</guid>
      <description>How to get an alert when you tap a cell in a list in SwiftUI. I still haven&#39;t gotten used to SwiftUI yet.
 </description>
    </item>
    
    <item>
      <title>Editing a List in SwiftUI</title>
      <link>https://en.swiswiswift.com/2019-12-17/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-17/</guid>
      <description>Here&#39;s how to edit a list in SwiftUI. I was able to write shorter code than UITableView.
Reference: How to enable editing on a list using EditButton</description>
    </item>
    
  </channel>
</rss>