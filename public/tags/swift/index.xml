<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on すいすいSwift</title>
    <link>https://swiswiswift.com/tags/swift/</link>
    <description>Recent content in Swift on すいすいSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 01 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://swiswiswift.com/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SwiftUIでListの要素を削除した入り増やしたりする</title>
      <link>https://swiswiswift.com/2020-03-01/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-03-01/</guid>
      <description>SwiftUIでListの要素を削除した入り増やしたりする方法です。 Closure で渡すのはあまりよくない気がし</description>
    </item>
    
    <item>
      <title>SwiftUIでキーボードをボタンで隠す</title>
      <link>https://swiswiswift.com/2020-02-29/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-29/</guid>
      <description>SwiftUIでキーボードをボタンで隠す方法です。 UIApplicationを拡張して実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIでKeyboardの高さや出現を検知する</title>
      <link>https://swiswiswift.com/2020-02-28/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-28/</guid>
      <description>SwiftUIでKeyboardの高さや出現を検知する方法です。 Combineを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行の文字列を入力する</title>
      <link>https://swiswiswift.com/2020-02-27/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-27/</guid>
      <description>SwiftUIで複数行の文字列を入力する方法です。 UIKitのTextViewを使って実現しています</description>
    </item>
    
    <item>
      <title>SwiftUIで下からPickerを出す</title>
      <link>https://swiswiswift.com/2020-02-26/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-26/</guid>
      <description>SwiftUIで下から Picker を出す方法です。 下からモーダルのように表示させています。 Importing an image into SwiftUI using UIImagePickerController (adsbygoogle = window.adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIでUIImagePickerControllerを使う</title>
      <link>https://swiswiswift.com/2020-02-25/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-25/</guid>
      <description>SwiftUIでSwiftUIでUIImagePickerControllerを使う方法です。 UIKit と同</description>
    </item>
    
    <item>
      <title>SwiftUIでButton内の画像の色を変えない</title>
      <link>https://swiswiswift.com/2020-02-24/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-24/</guid>
      <description>SwiftUIでButton内の画像の色を変えない方法です。 デフォルトのままだと以下の画像のように色</description>
    </item>
    
    <item>
      <title>iOS13のModalPresentationStyleを全部試してみた</title>
      <link>https://swiswiswift.com/2020-02-23/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-23/</guid>
      <description>iOS13のModalPresentationStyleを全部試してみました。 PopPage モーダルのことを弊社</description>
    </item>
    
    <item>
      <title>Swiftで動画の終了を検知する</title>
      <link>https://swiswiswift.com/2020-02-22/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-22/</guid>
      <description>Swiftで動画の終了を検知するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちら</description>
    </item>
    
    <item>
      <title>Swiftで動画を再生する</title>
      <link>https://swiswiswift.com/2020-02-21/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-21/</guid>
      <description>Swiftで動画を再生するサンプルです。 動画はこちらのサイトからお借りしました。 Hybrid Creative Movies SAKURA こちらのサイ</description>
    </item>
    
    <item>
      <title>SwiftUIでSwiftUIでサイドメニュー（ハンバーガーメニュー）を表示する</title>
      <link>https://swiswiswift.com/2020-02-20/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-20/</guid>
      <description>SwiftUIでサイドメニュー（ハンバーガーメニュー）を表示するサンプルです。 ドラッグで消す箇所など</description>
    </item>
    
    <item>
      <title>SwiftUIのListのSectionの色を変える</title>
      <link>https://swiswiswift.com/2020-02-19/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-19/</guid>
      <description>SwiftUIのListのSectionの色を変えるサンプルです。 Appearanceを使って背景色</description>
    </item>
    
    <item>
      <title>タップでセクション区切りのListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-18/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-18/</guid>
      <description>タップでセクション区切りのListViewにチェックを入れるサンプルです。 タップすることで State が変化し</description>
    </item>
    
    <item>
      <title>タップでListViewにチェックを入れる</title>
      <link>https://swiswiswift.com/2020-02-17/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-17/</guid>
      <description>タップで ListView にチェックを入れるサンプルです。 タップすることで State が変化し、✔︎を描画するようになります。</description>
    </item>
    
    <item>
      <title>SwiftでCSVを集計する</title>
      <link>https://swiswiswift.com/2020-02-16/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-16/</guid>
      <description>Swift で CSV を集計する方法です。 まず前処理として、CSV ファイルを utf8 に変換する必要があります。 Mac の場合は Numbers</description>
    </item>
    
    <item>
      <title>UIViewの背景をグリッドにしたり、ドットにしたりする</title>
      <link>https://swiswiswift.com/2020-02-14/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-14/</guid>
      <description>UIView の背景をグリッドにしたり、ドットにしたりする方法です。 今回は GridView という UIView のサブクラスを作り、ボタンを</description>
    </item>
    
    <item>
      <title>ReplayKitを使って画面を録音する</title>
      <link>https://swiswiswift.com/2020-02-12/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-12/</guid>
      <description>ReplayKit を使うと画面を録画することができます。 凄く簡単に使うことができる上に、マイクで実況？をしたりするこ</description>
    </item>
    
    <item>
      <title>SwiftUIでUICollectionViewのようにViewを並べる</title>
      <link>https://swiswiswift.com/2020-02-09/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-09/</guid>
      <description>SwiftUI で UICollectionView のように表示する方法です。 Q-Mobile/QGrid というライブラリを使うと簡単です。 QGrid を参考にしながら書いてみました</description>
    </item>
    
    <item>
      <title>SwiftUIでFirestoreの画像を表示する</title>
      <link>https://swiswiswift.com/2020-02-08/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-08/</guid>
      <description>SwiftUI で Firestore の画像を表示する方法です。 UIImage は SDWebImage を使えば簡単に表示できますが、SwiftUI ではそれができませ</description>
    </item>
    
    <item>
      <title>SwiftUIのToggleの変更を検知する</title>
      <link>https://swiswiswift.com/2020-02-05/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-02-05/</guid>
      <description>SwiftUIのToggleの変更を検知し、print 文を実行します。 参考: How can I trigger an action when a swiftUI toggle() is toggled?</description>
    </item>
    
    <item>
      <title>SwiftUIで複数行のPickerを作成する</title>
      <link>https://swiswiswift.com/2020-01-14/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-14/</guid>
      <description>UIPickerView のような複数行の Picker を作成する方法です。 UIPickerView と使い勝手がかなり異なり、戸惑いました。 参考: Multi-Component Picker (UIPickerView) in SwiftUI (adsbygoogle</description>
    </item>
    
    <item>
      <title>SwiftUIのPickerでLabelを表示しない</title>
      <link>https://swiswiswift.com/2020-01-13/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-13/</guid>
      <description>SwiftUIのPickerでLabelを表示しない方法です。 labelsHidden を設定することで可能です。 参考: How to</description>
    </item>
    
    <item>
      <title>SwiftUIでPicker を表示する</title>
      <link>https://swiswiswift.com/2020-01-12/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-12/</guid>
      <description>SwiftUI で Picker を表示するサンプルです。 複数行の場合はこちらです。 SwiftUIで複数行のPickerを作成す</description>
    </item>
    
    <item>
      <title>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出す</title>
      <link>https://swiswiswift.com/2020-01-11/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-11/</guid>
      <description>SwiftUI で画面遷移先の View から遷移元のメソッドを呼び出すサンプルです。 delegate を使ったのですが、Combine で書</description>
    </item>
    
    <item>
      <title>Swiftで数字が連番になった配列を作成する</title>
      <link>https://swiswiswift.com/2020-01-10/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-10/</guid>
      <description>Swiftで数字が連番になった配列を作成する方法です。 なかなか書き方を覚えられません。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;;</description>
    </item>
    
    <item>
      <title>Swiftで数字が連番になった配列を作成する</title>
      <link>https://swiswiswift.com/2020-01-10/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2020-01-10/</guid>
      <description>Swiftで数字が連番になった配列を作成する方法です。 なかなか書き方を覚えられません。 (adsbygoogle = window.adsbygoogle || []).push({}); amzn_assoc_ad_type =&#34;responsive_search_widget&#34;;</description>
    </item>
    
    <item>
      <title>MVPアーキテクチャを使ったサンプルアプリ</title>
      <link>https://swiswiswift.com/2019-12-30/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-30/</guid>
      <description>MVPアーキテクチャを使ったサンプルアプリです。 Unitテスト、UIテストも書きました。 以下のような</description>
    </item>
    
    <item>
      <title>StoryboardsをiOS13以上のプロジェクトから削除する</title>
      <link>https://swiswiswift.com/2019-12-29/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-29/</guid>
      <description>Swift &amp;amp; Storyboard でファイルを作成します。 Main.storyboard を削除します。 Main storyboard file base name の項を削除する。 Application Scene Manifest -&amp;gt; Application Session Role -&amp;gt; Item0 -&amp;gt; Storyboard Name を削</description>
    </item>
    
    <item>
      <title>Swift5.1で追加されたFunctionBuilderを使ってStructを作る</title>
      <link>https://swiswiswift.com/2019-12-19/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-12-19/</guid>
      <description>Swift5.1で追加されたFunctionBuilderを使ってStructを作る方法です。 SwiftUI でも</description>
    </item>
    
    <item>
      <title>TabViewを使って画面を切り替える（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-21/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-21/</guid>
      <description>TabViewを使って画面を切り替えるサンプルです。 かなり簡単に書くことができますね。 TabView - SwiftUI | Apple Developer Documentation</description>
    </item>
    
    <item>
      <title>ListViewからそれぞれ別のViewに遷移する（SwiftUI）</title>
      <link>https://swiswiswift.com/2019-11-20/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-20/</guid>
      <description>設定画面のようにListViewからそれぞれ別のViewに遷移する方法が少し手間でした。 もっと良い方</description>
    </item>
    
    <item>
      <title>Alamofireで受け取ったJsonをCodableを使ってパースする</title>
      <link>https://swiswiswift.com/2019-11-19/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-19/</guid>
      <description>お天気Webサービス（Livedoor Weather Web Service） の API を Alamofire から叩き、帰ってきた JSON を struct にパース</description>
    </item>
    
    <item>
      <title>SwiftUIでStructが使いまわされる</title>
      <link>https://swiswiswift.com/2019-11-14/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-14/</guid>
      <description>onDisappear で id を再生成することで回避しました。 @State に変化が無い場合はキャッシュを使い回したりするということでし</description>
    </item>
    
    <item>
      <title>SwiftUIでListを表示する</title>
      <link>https://swiswiswift.com/2019-11-13/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://swiswiswift.com/2019-11-13/</guid>
      <description>SwiftUI でList を表示する方法です。 画面遷移後の画面なので、NavigationBar がいます。 (adsbygoogle = window.adsbygoogle ||</description>
    </item>
    
  </channel>
</rss>