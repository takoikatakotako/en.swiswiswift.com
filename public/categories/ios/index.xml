<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on SwiSwiSwift</title>
    <link>https://en.swiswiswift.com/categories/ios/</link>
    <description>Recent content in iOS on SwiSwiSwift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://en.swiswiswift.com/categories/ios/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remove Storyboards from projects running iOS13 and above</title>
      <link>https://en.swiswiswift.com/2019-12-29/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-12-29/</guid>
      <description>Create a file with Swift &amp;amp; Storyboard. Removes Main.storyboard. Delete the term Main storyboard file base name. Application Scene Manifest -&amp;gt; Application Session Role -&amp;gt;</description>
    </item>
    
    <item>
      <title>Using TabView to switch screens (SwiftUI)</title>
      <link>https://en.swiswiswift.com/2019-11-21/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-21/</guid>
      <description>Here&#39;s a sample of how to switch screens using TabView. It&#39;s pretty easy to write about, isn&#39;t it?
TabView - SwiftUI | Apple Developer Documentation</description>
    </item>
    
    <item>
      <title>Transition from one ListView to another (SwiftUI)</title>
      <link>https://en.swiswiswift.com/2019-11-20/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-20/</guid>
      <description>It was a bit of a hassle to transition from one ListView to another like the configuration screen.
I feel like there&#39;s a better way to do it.</description>
    </item>
    
    <item>
      <title>Parsing the Json received in Alamofire using Codable</title>
      <link>https://en.swiswiswift.com/2019-11-19/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-19/</guid>
      <description>This is a way of tapping お天気Webサービス（Livedoor</description>
    </item>
    
    <item>
      <title>SwiftUI gets used a lot with Struct</title>
      <link>https://en.swiswiswift.com/2019-11-14/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-14/</guid>
      <description>This was avoided by regenerating the id with onDisappear.
If there is no change in @State, does that mean that you use the cache?
I&#39;m going to learn more about it!</description>
    </item>
    
    <item>
      <title>Displaying a List in SwiftUI</title>
      <link>https://en.swiswiswift.com/2019-11-13/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-13/</guid>
      <description>Here&#39;s how to display a list in SwiftUI. Since this is the screen after the screen transition, there is a NavigationBar.
 </description>
    </item>
    
    <item>
      <title>Sending push notifications to your app with cURL (curl)</title>
      <link>https://en.swiswiswift.com/2019-11-06/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-06/</guid>
      <description>How to send push notifications to iOS devices with the curl command.
Create a PEM file that includes both the certificate and the private key.</description>
    </item>
    
    <item>
      <title>Retrieving a certificate and private key from a P12 file</title>
      <link>https://en.swiswiswift.com/2019-11-05/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-11-05/</guid>
      <description>How to retrieve a certificate and private key from a .p12 file. I needed it when I was writing AWS SNS with Terraform. $ openssl</description>
    </item>
    
    <item>
      <title>Update cocoapods installed with gem.</title>
      <link>https://en.swiswiswift.com/2019-09-12/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-09-12/</guid>
      <description>How to update the version of cocoapods installed with gem. A rival for cocoapods? I&#39;m concerned about the carthage of
gem update cocoapods pod --version </description>
    </item>
    
    <item>
      <title>I had a chance to speak at iOSDCJapan2019 Day 1 in the Rookies LT slot.</title>
      <link>https://en.swiswiswift.com/2019-09-11/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-09-11/</guid>
      <description>Summary I&#39;m glad I signed up for the Rookies LT slot! It was a lot of fun! Rookies LT I am pleased to announce that</description>
    </item>
    
    <item>
      <title>Changing the height of a TableView cell (Swift5.0.1)</title>
      <link>https://en.swiswiswift.com/2019-07-30/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-07-30/</guid>
      <description>This is how to change the height of a cell in TableView.
I was able to achieve this by using .rowHeight for batch return and heightForRowAt for individual changes.</description>
    </item>
    
    <item>
      <title>UIButton, display a button (Swift5.0)</title>
      <link>https://en.swiswiswift.com/2019-06-03/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-06-03/</guid>
      <description>This is a sample code to display a button using UIButton. I use the rounded corner buttons a lot.
 </description>
    </item>
    
    <item>
      <title>Using UISlider to retrieve a value at regular intervals (Swift5.0)</title>
      <link>https://en.swiswiswift.com/2019-06-02/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-06-02/</guid>
      <description>0, 0.5, 1.0, 1.5 &amp;hellip;.. The following is a sample code to get the value at regular intervals of 0, 0, 5, 1, 0, 1, 1, 0, 1, 1, 5, and so on with UISlider.</description>
    </item>
    
    <item>
      <title>Getting a value with UISlider (Swift5.0)</title>
      <link>https://en.swiswiswift.com/2019-06-01/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-06-01/</guid>
      <description>This is the sample code to get the value with UISlider. You can take any value in between by setting a minimum and maximum value.</description>
    </item>
    
    <item>
      <title>Displaying an incoming call screen using CallKit.</title>
      <link>https://en.swiswiswift.com/2019-05-12/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-05-12/</guid>
      <description>You can use CallKit to use the UI on incoming calls. I used it to create an app that would call me.
 </description>
    </item>
    
    <item>
      <title>Performing UITest (E2E testing) on iOS (Swift5.0)OSでUITest（E2Eテスト）を行う(Swift5.0)</title>
      <link>https://en.swiswiswift.com/2019-04-11/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-04-11/</guid>
      <description>Then I implemented UITest for that app. Reference: 【Swift】初めてのUITest</description>
    </item>
    
    <item>
      <title>Switch RootViewController with animation (Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-02-01/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-02-01/</guid>
      <description>This is a sample code to switch RootViewController with animation.
It&#39;s supposed to be used after the tutorial and so on.
 </description>
    </item>
    
    <item>
      <title>Parse a local Json file and display it in table view (Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-01-27/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-27/</guid>
      <description>This is a sample code that parses the locally added JSON file and displays it in TableView.
It would be better to use SwiftyJson or something like that, but this time I wrote it without using it.</description>
    </item>
    
    <item>
      <title>Adopting UITest with Swift(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-01-26/</link>
      <pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-26/</guid>
      <description>Add the UITest to your project.
If you didn&#39;t create it when you created the project, you can add it by following the steps in the image below.</description>
    </item>
    
    <item>
      <title>Display items in a table with UITableView（Swift4.2）</title>
      <link>https://en.swiswiswift.com/2019-01-22/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-22/</guid>
      <description>UITableView&#39;s class hierarchy NSObject ↑ UIResponder ↑ UIView ↑ UIScrollView ↑ UITableView AppleDevelope</description>
    </item>
    
    <item>
      <title>Screen transition in NavigationController（Swift4.2）</title>
      <link>https://en.swiswiswift.com/2019-01-21/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-21/</guid>
      <description>This is the sample code for the NavigationContoroller.
The NavigationContoroller moves sideways to make screen transitions.
 </description>
    </item>
    
    <item>
      <title>Switching the Root of NavigationController（Swift4.2）</title>
      <link>https://en.swiswiswift.com/2019-01-20/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-20/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Selecting an image with ImagePickerController(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-01-11/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-11/</guid>
      <description># Swift 4.2
Read the Swift3 article here.
Selecting images with UIImagePickerController
It is a sample program to get an image from the photo library of the iPhone.</description>
    </item>
    
    <item>
      <title>Function(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-01-02/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-02/</guid>
      <description>This is how to create a function in Swift. Lately, I&#39;ve been able to write without even looking at online articles.
 </description>
    </item>
    
    <item>
      <title>Array(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2019-01-01/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2019-01-01/</guid>
      <description>#Swift4.2 It&#39;s a Swift array. This section describes the creation and calling of arrays. #Swift3の記事は</description>
    </item>
    
    <item>
      <title>Print(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2018-12-31/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-31/</guid>
      <description>#Swift4.2
The print statement can be used to output information such as the contents of an array or a string to the console.
 </description>
    </item>
    
    <item>
      <title>Search the contents of UITableView with UISearchBar(Swift4)</title>
      <link>https://en.swiswiswift.com/2018-12-30/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-30/</guid>
      <description>#Swift4.2 This is a sample of the combination of UITableView and UISearchBar. Pressing the magnifying glass on the navigation bar will bring up the SearchBar,</description>
    </item>
    
    <item>
      <title>Obtaining location information while using the app</title>
      <link>https://en.swiswiswift.com/2018-12-29/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-29/</guid>
      <description>#Swift 4.2 This is a sample code to get the latitude and longitude while using the app. The label string is updated when the latitude</description>
    </item>
    
    <item>
      <title>The interaction of the Lifesum app was nice, so I tried to recreate it.</title>
      <link>https://en.swiswiswift.com/2018-12-28/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-28/</guid>
      <description>#Swift4.2
I tried to recreate the interaction of the registration guide of the app Lifesum because it was very nice.
I&#39;m curious about the correlation between the awesomeness of the interaction and the registration dropout rate.</description>
    </item>
    
    <item>
      <title>押すとクニュっとするボタンを実装する</title>
      <link>https://en.swiswiswift.com/2018-12-27/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-27/</guid>
      <description>#Swift 4.2 押すとクニュっとするボタンのサンプルコードです</description>
    </item>
    
    <item>
      <title>Docker image that can be SSHed in(Ubuntu14.04)</title>
      <link>https://en.swiswiswift.com/2018-12-26/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-26/</guid>
      <description>For Ansible practice, I wrote this because I wanted an image that can be entered by SSH. Click here for CentOS7 Click here for CentOS6</description>
    </item>
    
    <item>
      <title>Obtaining JSON from the API using Alamofire(Swift4.2)</title>
      <link>https://en.swiswiswift.com/2018-12-01/</link>
      <pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-12-01/</guid>
      <description>Old article (Swift3) is here Getting JSON from the API using Alamofire
#Xcode 10.1
#Swift 4.2
This is a sample to get information from the weather API using Alamofire, a famous swift communication library, and SwiftyJSON, a famous swift JSON library.</description>
    </item>
    
    <item>
      <title>Renaming a project in Xcode10</title>
      <link>https://en.swiswiswift.com/2018-11-12/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-11-12/</guid>
      <description>I referred to this article as a reference. Thank you so much! The reference article is more detailed, so if you have any questions, please</description>
    </item>
    
    <item>
      <title>Creating a Group Style TableView</title>
      <link>https://en.swiswiswift.com/2018-09-20/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-09-20/</guid>
      <description>Sample code to display the group style table view. The settings screen looks like this.
 </description>
    </item>
    
    <item>
      <title>Getting the SafeArea</title>
      <link>https://en.swiswiswift.com/2018-09-19/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-09-19/</guid>
      <description>With the arrival of the iPhoneX, I&#39;ve become more concerned with the layout of the iPhoneX (getting SafeArea).
SafeArea can be obtained by referring to the safeAreaInsets property in the viewDidLayoutSubviews method.</description>
    </item>
    
    <item>
      <title>Read barcodes in iOS</title>
      <link>https://en.swiswiswift.com/2018-09-17/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-09-17/</guid>
      <description>This is a sample code to read barcodes with Swift. Reference: Swift 4でQRコードを読み取る A</description>
    </item>
    
    <item>
      <title>Search with SearchBar in CollectionView</title>
      <link>https://en.swiswiswift.com/2018-07-18/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-07-18/</guid>
      <description>This is a sample of a search with a search bar and a collection view in the collection view.
 </description>
    </item>
    
    <item>
      <title>Implementing a flowing background</title>
      <link>https://en.swiswiswift.com/2018-06-28/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-06-28/</guid>
      <description>I&#39;m sometimes asked how to implement the background of an app I&#39;m making called Four Choice Chemistry, so I wrote a sample code for it.</description>
    </item>
    
    <item>
      <title>PageViewController &amp; PageControl</title>
      <link>https://en.swiswiswift.com/2018-06-21/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-06-21/</guid>
      <description>This is an implementation sample of PageViewController, which is often used for tutorial screens and e-book readers.
 </description>
    </item>
    
    <item>
      <title>Implementing CustomView with Code</title>
      <link>https://en.swiswiswift.com/2018-06-19/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-06-19/</guid>
      <description>Here&#39;s a sample of how to create and display a custom view in your code.
I like to implement it without using xib or storyborad, but what&#39;s best?</description>
    </item>
    
    <item>
      <title>Nested implementation of UINavigationController in UITabBarController.</title>
      <link>https://en.swiswiswift.com/2018-06-03/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-06-03/</guid>
      <description>This is the code to add UINavigationController to UITabBarController. Implemented by including UINavigationBarController in UITabBarController.
The implementation of UITabBarController is here. Implementing NavigationController
 </description>
    </item>
    
    <item>
      <title>Implement UITabBarController.</title>
      <link>https://en.swiswiswift.com/2018-06-02/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-06-02/</guid>
      <description>This is a sample implementation of UITabBarController, which is used to switch views.
The icon for UITabBarController is a 30×30 transparent png.
 </description>
    </item>
    
    <item>
      <title>Using Color Set to manage colors in Asset Catalog</title>
      <link>https://en.swiswiswift.com/2018-05-24/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-05-24/</guid>
      <description>Starting with Xcode9 (iOS 11), you can now manage your colors with Assets.
I made a UIColor Extension and registered a color and made a function.</description>
    </item>
    
    <item>
      <title>I sent a code-level question to an Apple engineer.</title>
      <link>https://en.swiswiswift.com/2018-05-21/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-05-21/</guid>
      <description>My friends often tell me that AppleDeveloper registration fees are too high, but there are many good things in spite of the high fees.
One of them is Technical Support Incident (TSI), where Apple engineers can answer questions and consult with you at the code level about bugs or problems that cannot be fixed.</description>
    </item>
    
    <item>
      <title>Grading the UIView background</title>
      <link>https://en.swiswiswift.com/2018-05-06/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-05-06/</guid>
      <description>This is a sample code to make the background of UIView gradient. Reference 【Swift x iOSアプ</description>
    </item>
    
    <item>
      <title>Implementing a custom button class</title>
      <link>https://en.swiswiswift.com/2018-05-02/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-05-02/</guid>
      <description>This is a sample code to create and paste a custom button class that extends UIButton.
By separating the look and feel of the ViewController into separate files, you can make the ViewController look neat.</description>
    </item>
    
    <item>
      <title>Edit TableView to delete a Cell</title>
      <link>https://en.swiswiswift.com/2018-04-24/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-04-24/</guid>
      <description>This is a sample code to delete a Cell by editing TableView.
You can add an edit button to the NavigationBar and remove the cell by pressing that button.</description>
    </item>
    
    <item>
      <title>Edit TableView and delete a Cell (side-slide).</title>
      <link>https://en.swiswiswift.com/2018-04-23/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-04-23/</guid>
      <description>This is a sample code to delete a Cell by editing TableView.
By adding the following functions, you can add the ability to delete a cell by sliding it horizontally.</description>
    </item>
    
    <item>
      <title>Separate numbers into commas for each three digits (in Japanese yen)</title>
      <link>https://en.swiswiswift.com/2018-04-23/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-04-23/</guid>
      <description>I tried to find out how to divide the Japanese Yen by 3 digits, as in the Japanese Yen display. It&#39;s like 123,456,789 yen or</description>
    </item>
    
    <item>
      <title>Get the current date and day of the week and the current time</title>
      <link>https://en.swiswiswift.com/2018-04-20/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-04-20/</guid>
      <description>Sample code to get the current date, day of the week, and current time in Swift4.1. You can get it as a string of the</description>
    </item>
    
    <item>
      <title>Customize the layout of TableVIew using CustumTableViewCell and accessoryView.</title>
      <link>https://en.swiswiswift.com/2018-04-05/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-04-05/</guid>
      <description>By creating CustumTableViewCell, you can use cells of your favorite layout in TableView. And the TableViewCell accessory view can be equipped with accessories such as</description>
    </item>
    
    <item>
      <title>Adding a TextField to UIAlertController</title>
      <link>https://en.swiswiswift.com/2018-03-17/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-17/</guid>
      <description>This is a sample of adding a TextField to UIAlertController.
 </description>
    </item>
    
    <item>
      <title>Implementing NavigationController</title>
      <link>https://en.swiswiswift.com/2018-03-15/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-15/</guid>
      <description>This is the sample code for the NavigationContoroller.
The NavigationContoroller moves sideways to make screen transitions.
 </description>
    </item>
    
    <item>
      <title>Generating a QR code from a string or URL</title>
      <link>https://en.swiswiswift.com/2018-03-07/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-07/</guid>
      <description>This is a sample code to generate a QR code from a character string or URL. Reference: CIImageを</description>
    </item>
    
    <item>
      <title>Display an alert with UIAlertController</title>
      <link>https://en.swiswiswift.com/2018-03-06/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-06/</guid>
      <description>Here is a sample of how to issue alerts using UIAlertController.
If you set UIAlertControllerStyle.alert to UIAlertControllerStyle.actionSheet, it will be an alert that comes out from the bottom.</description>
    </item>
    
    <item>
      <title>UIAlertController(UIActionSheet)</title>
      <link>https://en.swiswiswift.com/2018-03-05/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-05/</guid>
      <description>The alerts that come out from below are implemented using UIAlertController.
A long time ago, there was a time when alerts coming out of the bottom were called UIActionSheets, but they have been integrated into UIAlertController.</description>
    </item>
    
    <item>
      <title>Enumerated Type</title>
      <link>https://en.swiswiswift.com/2018-03-04/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-04/</guid>
      <description>This is a sample code of how to write enum and enum.
Here, we created a class called &amp;ldquo;person&amp;rdquo; and registered Kabigon&#39;s name and hometown using enum.</description>
    </item>
    
    <item>
      <title>How to learn how to program iPhone apps</title>
      <link>https://en.swiswiswift.com/2018-03-03/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-03-03/</guid>
      <description>What do I have to learn to make an iPhone app from? My friends often ask me, &amp;ldquo;What&#39;s the best way to study?&amp;quot;, so I&#39;ve put together some recommendations.</description>
    </item>
    
    <item>
      <title>Using UserDefaults to save parameters</title>
      <link>https://en.swiswiswift.com/2018-01-17/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-01-17/</guid>
      <description>UserDefaults are used to store data that you want to keep even if you drop the app.
It&#39;s very simple to use.
In the sample code, the initial value is set with userDefaults.</description>
    </item>
    
    <item>
      <title>Selecting values using the UIPickerView</title>
      <link>https://en.swiswiswift.com/2018-01-14/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2018-01-14/</guid>
      <description>Hi there!
This is the sample code for retrieving the value using UIPickerView.
PIPickerView is often used to select elements from a selection.
This time, I created an app that allows you to choose between food, drink and food.</description>
    </item>
    
    <item>
      <title>Repeating at a certain time</title>
      <link>https://en.swiswiswift.com/2017-12-13/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-12-13/</guid>
      <description>Repeat every three seconds using Time.
I used it to create an app that functions like a clock.
 </description>
    </item>
    
    <item>
      <title>Create a collection view with custom layouts</title>
      <link>https://en.swiswiswift.com/2017-11-27/</link>
      <pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-11-27/</guid>
      <description>I decided to create a design with nested images in the app I&#39;m working on, so I looked into how to implement it. I used</description>
    </item>
    
    <item>
      <title>UDP communication in Swift and sending a string</title>
      <link>https://en.swiswiswift.com/2017-11-26/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-11-26/</guid>
      <description>This is a note to communicate with UDP in Swift.
I installed SwiftSocket via cocoapods and wrote it like this. I used it to communicate with the WOOM-02.</description>
    </item>
    
    <item>
      <title>Removing @objc inference warnings when migrating from Swift3 to Swift4</title>
      <link>https://en.swiswiswift.com/2017-11-25/</link>
      <pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-11-25/</guid>
      <description>When I switch from Xcode8 to Xcode9 and convert to Swift4, I get the following error. Here&#39;s how to make it disappear.
The use of Swift 3 @objc inference in Swift 4 mode is deprecated.</description>
    </item>
    
    <item>
      <title>Pinch to zoom in and out on an image with UIScrollView</title>
      <link>https://en.swiswiswift.com/2017-11-13/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-11-13/</guid>
      <description>This is a sample of how to zoom in and out on an image in a UIScrollView.
Pinch to make the image larger or smaller.</description>
    </item>
    
    <item>
      <title>Removing the back button in UINavigationController.</title>
      <link>https://en.swiswiswift.com/2017-10-14/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-10-14/</guid>
      <description>Removes the text of the back button in UINavigationController.
Change &amp;ldquo;&amp;lt; back&amp;rdquo; to &amp;ldquo;&amp;lt;&amp;rdquo;.
let backButton = UIBarButtonItem(title: &amp;quot;&amp;quot;, style: .plain, target: nil, action: nil) self.</description>
    </item>
    
    <item>
      <title>Execute after ○ seconds, execute every second</title>
      <link>https://en.swiswiswift.com/2017-10-13/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-10-13/</guid>
      <description>Here&#39;s a sample that runs every second, after a few seconds in Swift.
It is output to the console every second.
 </description>
    </item>
    
    <item>
      <title>Setting a header in UITableView</title>
      <link>https://en.swiswiswift.com/2017-10-08/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-10-08/</guid>
      <description>This is a sample of setting a header in UITableView.
The footer can be set up in the same way.
 </description>
    </item>
    
    <item>
      <title>Adding a Custom Cell to UICollectionView</title>
      <link>https://en.swiswiswift.com/2017-10-03/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-10-03/</guid>
      <description>I tried to add a custumCollection cell to UICollectionView.
The NSStringFromClass(CustumCollectionViewCell.self), which converts class names to strings, is very useful when using UITableView or UICollectionView.</description>
    </item>
    
    <item>
      <title>UICollectionView</title>
      <link>https://en.swiswiswift.com/2017-10-02/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-10-02/</guid>
      <description>This is a sample of UICollectionView. This is a reference to the This site is easy to look at and I highly recommend it to</description>
    </item>
    
    <item>
      <title>Skip the Export Compliance Wizard</title>
      <link>https://en.swiswiswift.com/2017-08-12/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-08-12/</guid>
      <description>When you submit your app to TestFlight or something like that, you&#39;re asked if it includes encryption.
It makes me want to skip it every time I hear it.</description>
    </item>
    
    <item>
      <title>Obtaining JSON from the API using Alamofire</title>
      <link>https://en.swiswiswift.com/2017-07-09/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-09/</guid>
      <description>New article (Swift4) is here. Using Alamofire to get JSON from the API (Swift4.2) This is a sample of retrieving information from the weather API</description>
    </item>
    
    <item>
      <title>Calling a method from another View in a delegate</title>
      <link>https://en.swiswiswift.com/2017-07-08/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-07-08/</guid>
      <description>This is a sample of a delegate that executes functions, etc. from one View to another ViewController.
In this case, I changed the background color of the original view from a modal view using a delegate.</description>
    </item>
    
    <item>
      <title>Get and display the class name, function name and line number in Swift</title>
      <link>https://en.swiswiswift.com/2017-06-15/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-06-15/</guid>
      <description>We can&#39;t move in here! The debugging will be quicker if you write it in a part of the
The class name and line number, retrieved can be displayed.</description>
    </item>
    
    <item>
      <title>Selecting images with UIImagePickerController</title>
      <link>https://en.swiswiswift.com/2017-06-14/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-06-14/</guid>
      <description>It is a sample program to get an image from the photo library of the iPhone.
In order to select images from the photo library, you have to specify that the photo library is used in the info.</description>
    </item>
    
    <item>
      <title>Playing music with Swift</title>
      <link>https://en.swiswiswift.com/2017-06-05/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-06-05/</guid>
      <description>This is a sample code to play music easily with Swift. Repeat playback was easy to do. It&#39;s not in the sample code, but it should handle errors properly.</description>
    </item>
    
    <item>
      <title>Whitening the UIStatusBar</title>
      <link>https://en.swiswiswift.com/2017-05-16/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-16/</guid>
      <description>How to make UIStatusBar white, part 1
How to make UIStatusBar white, part 1. This is how to whiten a particular ViewController. Write it to the UIViewController that you want to make white.</description>
    </item>
    
    <item>
      <title>UITableView and UISearchBar</title>
      <link>https://en.swiswiswift.com/2017-05-15/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-15/</guid>
      <description>This is a sample of the combination of UITableView and UISearchBar.
Pressing the magnifying glass on the navigation bar will bring up the SearchBar, and typing a character there will bring up the search results.</description>
    </item>
    
    <item>
      <title>UserNotification(LocalNotification)</title>
      <link>https://en.swiswiswift.com/2017-05-14/</link>
      <pubDate>Sun, 14 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-14/</guid>
      <description>UserNotification is used to issue a notification to a user.
There are two main types of UserNotifications, RemoteNotification (notifications like Line and Twitter) and LocalNotification (notifications that are issued internally, like clock apps).</description>
    </item>
    
    <item>
      <title>Speech Recognition(SFSpeechRecognizer)</title>
      <link>https://en.swiswiswift.com/2017-05-13/</link>
      <pubDate>Sat, 13 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-13/</guid>
      <description>iOS10からSpeech Frameworkが登場</description>
    </item>
    
    <item>
      <title>UITextField</title>
      <link>https://en.swiswiswift.com/2017-05-12/</link>
      <pubDate>Fri, 12 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-12/</guid>
      <description>A UITextField is used to enter a character.
Class Hierarchy of UITextField
NSObject
↑upside down
UIResponder.
↑upside down
UIView.
↑upside down
UIControl
↑upside down
UITextField</description>
    </item>
    
    <item>
      <title>Creating a CAF file</title>
      <link>https://en.swiswiswift.com/2017-05-11/</link>
      <pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-11/</guid>
      <description>.caf file is an audio file format used by iOS. The following command outputs a wav file with the same name. afconvert -f caff -d</description>
    </item>
    
    <item>
      <title>UINavigationBar</title>
      <link>https://en.swiswiswift.com/2017-05-10/</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-10/</guid>
      <description>The UINavigationBar is the most commonly used UINavigationBar at the top of iOS app screens.
Class hierarchy of UINavigationBar.
NSObject
↑upside down
UIResponder.
↑upside down</description>
    </item>
    
    <item>
      <title>UILabel</title>
      <link>https://en.swiswiswift.com/2017-05-09/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-09/</guid>
      <description>The UILabel class is a class to manage the character display. This is used when you want to display text on the screen. UILabel&#39;s class</description>
    </item>
    
    <item>
      <title>Obtaining the current time</title>
      <link>https://en.swiswiswift.com/2017-05-08/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-08/</guid>
      <description>Get the current time. AppleDeveloperリファレンスN</description>
    </item>
    
    <item>
      <title>UITableView</title>
      <link>https://en.swiswiswift.com/2017-05-07/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-07/</guid>
      <description>UITableView is a class that displays text in the form of a list. It is useful for displaying a list of data and so on.</description>
    </item>
    
    <item>
      <title>UIButton</title>
      <link>https://en.swiswiswift.com/2017-05-05/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-05/</guid>
      <description>The UIButton class is a class for placing a button. You can take an action with a button tap. Class Hierarchy of UIButton NSObject ↑</description>
    </item>
    
    <item>
      <title>UIBarButtonItem</title>
      <link>https://en.swiswiswift.com/2017-05-04/</link>
      <pubDate>Thu, 04 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-04/</guid>
      <description>UIBarButtonItem used to add or customize elements in UINavigationBar. Class hierarchy of UIBarButtonItem NSObject ↑ UIBarItem ↑ UIBarButtonItem AppleDe</description>
    </item>
    
    <item>
      <title>Dictionary</title>
      <link>https://en.swiswiswift.com/2017-05-02/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-02/</guid>
      <description>A Swift dictionary array. Describes how to create and call a dictionary array.
I like that different people use different ways of saying things like dictionary arrays, hashes, maps, etc.</description>
    </item>
    
    <item>
      <title>Array</title>
      <link>https://en.swiswiswift.com/2017-05-01/</link>
      <pubDate>Mon, 01 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://en.swiswiswift.com/2017-05-01/</guid>
      <description>How to write an array
It&#39;s a Swift array. This section describes the creation and calling of arrays.
 Add, Insert and Delete Arrays
I will try to add, insert and delete arrays.</description>
    </item>
    
  </channel>
</rss>